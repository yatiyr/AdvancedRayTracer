- In this assignment you are expected to implement a basic ray tracer
that supports ray-triangle and ray-sphere intersections with a simple
perspective camera model and simple shading models. These include
diffuse shading, specular (Blinn-Phong) shading, and ambient shading.

- The inputs to your program will be custom XML files that define the
camera and scene properties. The XML files are generally
self-explanatory but you can ask in the forum in case of confusion.

- The "Mesh" element defines a collection of triangles using an
index-based representation. Indices are 1-based (index 1 represents
the first vertex in your vertex list).

- If the camera vectors are not orthogonal to each other, you are
expected to adjust the up vector to make it orthogonal to the gaze
vector. Also do not assume that the camera vectors given are unit
vectors. Make sure to convert them to unit vectors yourself. You
can apply the following steps:

w = -normalize(gaze)
u = normalize(up x w)
v = normalize(w x u)

- You are expected to submit your homework as a single compressed file
(.zip or .tar.gz) and share your results in a custom blog page that
you will create. Please share your experiences in this blog page. You
can include timings, the difficulties you encountered and how you
solved them, even results of failed renderings. Posting only images
without discussions is not acceptable. Your grading will be based on
the correctness of the results as well as the quality of the blog
page.

- Minor differences from the provided images are acceptable - they do
not have to be binary equivalent.

- Late submission up to 3 days is possible. But each late day will
have 10 points penalty. No submission is allowed after 3 late days.

